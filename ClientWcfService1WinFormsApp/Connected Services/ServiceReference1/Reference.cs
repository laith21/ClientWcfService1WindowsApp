//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="getwatchdata", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    public partial class getwatchdata : object
    {
        
        private string Blood_PressureField;
        
        private string Heart_RateField;
        
        private string Oxygen_SaturationField;
        
        private string Stairs_ClimbedField;
        
        private string Steps_WalkedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Blood_Pressure
        {
            get
            {
                return this.Blood_PressureField;
            }
            set
            {
                this.Blood_PressureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Heart_Rate
        {
            get
            {
                return this.Heart_RateField;
            }
            set
            {
                this.Heart_RateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oxygen_Saturation
        {
            get
            {
                return this.Oxygen_SaturationField;
            }
            set
            {
                this.Oxygen_SaturationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stairs_Climbed
        {
            get
            {
                return this.Stairs_ClimbedField;
            }
            set
            {
                this.Stairs_ClimbedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Steps_Walked
        {
            get
            {
                return this.Steps_WalkedField;
            }
            set
            {
                this.Steps_WalkedField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertUserData", ReplyAction="http://tempuri.org/IService1/InsertUserDataResponse")]
        string InsertUserData(ServiceReference1.getwatchdata userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertUserData", ReplyAction="http://tempuri.org/IService1/InsertUserDataResponse")]
        System.Threading.Tasks.Task<string> InsertUserDataAsync(ServiceReference1.getwatchdata userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllUserData", ReplyAction="http://tempuri.org/IService1/SelectAllUserDataResponse")]
        string SelectAllUserData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectAllUserData", ReplyAction="http://tempuri.org/IService1/SelectAllUserDataResponse")]
        System.Threading.Tasks.Task<string> SelectAllUserDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectOxygenData", ReplyAction="http://tempuri.org/IService1/SelectOxygenDataResponse")]
        string SelectOxygenData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectOxygenData", ReplyAction="http://tempuri.org/IService1/SelectOxygenDataResponse")]
        System.Threading.Tasks.Task<string> SelectOxygenDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectHeartData", ReplyAction="http://tempuri.org/IService1/SelectHeartDataResponse")]
        string SelectHeartData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectHeartData", ReplyAction="http://tempuri.org/IService1/SelectHeartDataResponse")]
        System.Threading.Tasks.Task<string> SelectHeartDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectBloodData", ReplyAction="http://tempuri.org/IService1/SelectBloodDataResponse")]
        string SelectBloodData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectBloodData", ReplyAction="http://tempuri.org/IService1/SelectBloodDataResponse")]
        System.Threading.Tasks.Task<string> SelectBloodDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectStepsData", ReplyAction="http://tempuri.org/IService1/SelectStepsDataResponse")]
        string SelectStepsData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectStepsData", ReplyAction="http://tempuri.org/IService1/SelectStepsDataResponse")]
        System.Threading.Tasks.Task<string> SelectStepsDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectStairsData", ReplyAction="http://tempuri.org/IService1/SelectStairsDataResponse")]
        string SelectStairsData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectStairsData", ReplyAction="http://tempuri.org/IService1/SelectStairsDataResponse")]
        System.Threading.Tasks.Task<string> SelectStairsDataAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface IService1Channel : ServiceReference1.IService1, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ServiceReference1.IService1>, ServiceReference1.IService1
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Service1Client() : 
                base(Service1Client.GetDefaultBinding(), Service1Client.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService1.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), Service1Client.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string InsertUserData(ServiceReference1.getwatchdata userInfo)
        {
            return base.Channel.InsertUserData(userInfo);
        }
        
        public System.Threading.Tasks.Task<string> InsertUserDataAsync(ServiceReference1.getwatchdata userInfo)
        {
            return base.Channel.InsertUserDataAsync(userInfo);
        }
        
        public string SelectAllUserData()
        {
            return base.Channel.SelectAllUserData();
        }
        
        public System.Threading.Tasks.Task<string> SelectAllUserDataAsync()
        {
            return base.Channel.SelectAllUserDataAsync();
        }
        
        public string SelectOxygenData()
        {
            return base.Channel.SelectOxygenData();
        }
        
        public System.Threading.Tasks.Task<string> SelectOxygenDataAsync()
        {
            return base.Channel.SelectOxygenDataAsync();
        }
        
        public string SelectHeartData()
        {
            return base.Channel.SelectHeartData();
        }
        
        public System.Threading.Tasks.Task<string> SelectHeartDataAsync()
        {
            return base.Channel.SelectHeartDataAsync();
        }
        
        public string SelectBloodData()
        {
            return base.Channel.SelectBloodData();
        }
        
        public System.Threading.Tasks.Task<string> SelectBloodDataAsync()
        {
            return base.Channel.SelectBloodDataAsync();
        }
        
        public string SelectStepsData()
        {
            return base.Channel.SelectStepsData();
        }
        
        public System.Threading.Tasks.Task<string> SelectStepsDataAsync()
        {
            return base.Channel.SelectStepsDataAsync();
        }
        
        public string SelectStairsData()
        {
            return base.Channel.SelectStairsData();
        }
        
        public System.Threading.Tasks.Task<string> SelectStairsDataAsync()
        {
            return base.Channel.SelectStairsDataAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:58583/Service1.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return Service1Client.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return Service1Client.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IService1,
        }
    }
}
